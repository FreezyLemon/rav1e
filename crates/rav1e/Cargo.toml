[package]
name = "rav1e"
version = "0.7.0"
authors = ["Thomas Daede <tdaede@xiph.org>"]
edition = "2021"
rust-version = "1.70.0"
build = "build.rs"
include = [
  "/Cargo.toml",
  "/LICENSE",
  "/PATENTS",
  "/README.md",
  "/build.rs",
  "/cbindgen.toml",
  "/src/**",
]
license = "BSD-2-Clause"
description = "The fastest and safest AV1 encoder"
readme = "README.md"
repository = "https://github.com/xiph/rav1e/"
autobenches = false
autobins = false

[features]
decode_test = ["aom-sys"]
decode_test_dav1d = ["dav1d-sys"]
default = ["asm", "threading", "git_version"]
git_version = ["built/git2"]
asm = ["dep:rav1e_asm_x86", "dep:rav1e_asm_aarch64"]
threading = ["rayon/threads"]
dump_ivf = ["ivf"]
quick_test = []
desync_finder = ["backtrace"]
bench = []
check_asm = []
capi = ["scan_fmt"]
tracing = [
  "profiling/profile-with-tracing",
  "tracing-subscriber",
  "tracing-chrome",
  "dep:tracing"
]
scenechange = []
serialize = [
  "serde",
  "serde-big-array",
  "toml",
  "v_frame/serialize",
  "rav1e_partitioning/serialize",
  "av1-grain/serialize",
]
wasm = ["wasm-bindgen"]

# Enables debug dumping of lookahead computation results, specifically:
# - i-qres.png: quarter-resolution luma planes,
# - i-hres.png: half-resolution luma planes,
# - i-mvs.bin: motion vectors,
# - i-imps.bin: block importances,
# - i-activity_scales.bin: spatial scales,
# - i-distortion_scales.bin: temporal scales,
# - i-spatiotemporal_scales.bin,
# - i-thresholds.bin: segmentation thresholds.
dump_lookahead_data = ["byteorder", "image"]

[dependencies]
rav1e_partitioning = { path = "../rav1e_partitioning" }
rav1e_tx = { path = "../rav1e_tx" }
ivf = { path = "../ivf", optional = true }

arg_enum_proc_macro = "0.3.4"
bitstream-io = "2"
cfg-if = "1.0"
libc = "0.2"
backtrace = { version = "0.3", optional = true }
num-traits = "0.2"
num-derive = "0.4"
paste = "1.0"
noop_proc_macro = "0.3.0"
serde = { version = "1.0", features = ["derive"], optional = true }
dav1d-sys = { version = "0.7.0", package = "libdav1d-sys", optional = true }
aom-sys = { version = "0.3.3", optional = true }
scan_fmt = { version = "0.2.6", optional = true, default-features = false }
v_frame = "0.3.7"
rayon = { package = "maybe-rayon", version = "0.1", default-features = false }
toml = { version = "0.8", optional = true }
arrayvec = "0.7"
thiserror = "1.0"
byteorder = { version = "1.5.0", optional = true }
log = "0.4"
itertools = "0.12"
simd_helpers = "0.1"
wasm-bindgen = { version = "0.2.90", optional = true }
new_debug_unreachable = "1.0.4"
av1-grain = "0.2.3"
serde-big-array = { version = "0.5.1", optional = true }
profiling = { version = "1" }
tracing-subscriber = { version = "0.3.18", optional = true }
tracing-chrome = { version = "0.7.1", optional = true }
tracing = { version = "0.1.40", optional = true }
aligned-vec = "0.5.0"

[dependencies.image]
version = "0.24.8"
optional = true
default-features = false
features = ["png"]

[build-dependencies]
built = "0.7"

[target.'cfg(target_arch = "x86_64")'.dependencies]
rav1e_asm_x86 = { path = "../rav1e_asm_x86", optional = true }

[target.'cfg(target_arch = "aarch64")'.dependencies]
rav1e_asm_aarch64 = { path = "../rav1e_asm_aarch64", optional = true }

[dev-dependencies]
pretty_assertions = "1.4.0"
interpolate_name = "0.2.4"
nom = "7.1.3"
quickcheck = "1.0"
rand = "0.8"
rand_chacha = "0.3"
semver = "1.0"

[target.'cfg(target_arch = "wasm32")'.dev-dependencies]
criterion = { version = "0.5", default-features = false }

[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies]
assert_cmd = "2.0"
criterion = "0.5"

[target.'cfg(fuzzing)'.dependencies]
arbitrary = "1.3"
interpolate_name = "0.2.4"
libfuzzer-sys = "0.4.7"
rand = "0.8"
rand_chacha = "0.3"

[target.'cfg(any(decode_test, decode_test_dav1d))'.dependencies]
system-deps = "6"

[lib]
bench = false

[[bench]]
name = "bench"
path = "benches/bench.rs"
required-features = ["bench"]
harness = false

[package.metadata.docs.rs]
no-default-features = true
